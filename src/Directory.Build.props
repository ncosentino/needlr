<?xml version="1.0" encoding="utf-8"?>
<Project>
  <PropertyGroup>
    <TargetFramework>net9.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    
    <!-- NuGet Package Information - Central Configuration -->
    <Authors>Nexus Software Labs</Authors>
    <Company>Nexus Software Labs</Company>
    <Product>Needlr</Product>
    <Copyright>Copyright Â© Nexus Software Labs $([System.DateTime]::Now.Year)</Copyright>
    <PackageProjectUrl>https://github.com/nexus-labs/needlr</PackageProjectUrl>
    <RepositoryUrl>https://github.com/nexus-labs/needlr.git</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <PackageTags>dependency-injection;ioc;aspnetcore;plugins</PackageTags>
    
    <!-- Build Configuration -->
    <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <NoWarn>$(NoWarn);CS1591</NoWarn>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <Deterministic>true</Deterministic>
    <ContinuousIntegrationBuild Condition="'$(CI)' == 'true'">true</ContinuousIntegrationBuild>

    <!-- Output Configuration -->
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    
    <!-- Default README all packages get unless overridden -->
	<RootReadmePath>$([System.IO.Path]::GetFullPath('$(MSBuildThisFileDirectory)..\README.md'))</RootReadmePath>
  </PropertyGroup>

  <!-- Automatically mark matching projects as packable -->
  <PropertyGroup Condition="
    $([System.String]::new('$(MSBuildProjectName)').StartsWith('NexusLabs.Needlr'))
    AND
    !$([System.String]::new('$(MSBuildProjectName)').EndsWith('Tests'))
  ">
    <IsPackable>true</IsPackable>
  </PropertyGroup>

  <!-- Automatically configure test projects -->
  <PropertyGroup Condition="$([System.String]::new('$(MSBuildProjectName)').EndsWith('Tests'))">
    <OutputType>Exe</OutputType>
    <IsTestProject>true</IsTestProject>
    <IsPackable>false</IsPackable>
    <GenerateProgramFile>false</GenerateProgramFile>
    <EnableDefaultItems>true</EnableDefaultItems>
  </PropertyGroup>

  <!-- README selection:
       1) Use per-project README at src/<proj>/Package.README.md if present.
       2) Else use the repo-root README.md.
       3) If neither exists, don't set PackageReadmeFile (avoids NU5039). -->
  <Choose>
    <When Condition="'$(IsPackable)' == 'true' and Exists('$(MSBuildProjectDirectory)\Package.README.md')">
      <PropertyGroup>
        <PackageReadmeFile>Package.README.md</PackageReadmeFile>
      </PropertyGroup>
      <ItemGroup>
        <None Include='$(MSBuildProjectDirectory)\Package.README.md'
            Pack='true'
            PackagePath='\' />
      </ItemGroup>
    </When>
    <Otherwise>
      <PropertyGroup Condition="'$(IsPackable)' == 'true' and Exists('$(RootReadmePath)')">
        <PackageReadmeFile>README.md</PackageReadmeFile>
      </PropertyGroup>
      <ItemGroup Condition="'$(IsPackable)' == 'true' and Exists('$(RootReadmePath)')">
        <None Include='$(RootReadmePath)'
            Pack='true'
            PackagePath='\' />
      </ItemGroup>
    </Otherwise>
  </Choose>

  <ItemGroup>
    <PackageReference Include="Nerdbank.GitVersioning" PrivateAssets="all" />
    <PackageReference Include="Microsoft.SourceLink.GitHub" PrivateAssets="All" />
  </ItemGroup>

  <!-- Automatically include test packages for test projects -->
  <ItemGroup Condition="$([System.String]::new('$(MSBuildProjectName)').EndsWith('Tests'))">
    <PackageReference Include="xunit.v3" />
    <PackageReference Include="xunit.runner.visualstudio">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.NET.Test.Sdk" />
    <PackageReference Include="Moq" />
    <PackageReference Include="coverlet.collector">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>
  
</Project>
